<?php
/**
 * Implements hook_menu().
 */
function body_class_by_path_menu(){
	$items = array();
	$items['admin/config/addpath'] = array(
	 'title' => 'Add Class By Path',
	 'description' => 'A form add path for adding class on body.',
	 'page callback' => 'drupal_get_form',
	 'page arguments' => array('body_class_by_path_form'),
	 'access arguments' => array('administer content types')
	);
	$items['admin/config/pathlist'] = array(
	 'title' => 'Path By Class',
	 'type' => MENU_NORMAL_ITEM,
	 'description' => 'List of the all classes showing added by url based',
	 'page callback' => 'body_class_by_path_form_data',
     'access arguments' => array('administer content types')
	);
	$items['admin/config/pathlist/%/edit'] = array(
	 'title' => 'Edit List',
	 'type' => MENU_NORMAL_ITEM,
	 'description' => 'Listing path',
	 'page callback' => 'drupal_get_form',
	 'page arguments' => array('body_class_by_path_form_edit'),
     'access arguments' => array('administer content types')
	);
	$items['admin/config/pathlist/%/delete'] = array(
	 'title' => 'Delete Path',
	 'type' => MENU_NORMAL_ITEM,
	 'description' => 'Listing path',
	 'page callback' => 'drupal_get_form',
	 'page arguments' => array('body_class_by_path_form_delete'),
     'access arguments' => array('administer content types')
	);
  return $items;
}

/**
 * Implements form_creation().
 */
function body_class_by_path_form($form, &$form_state){
	
	$form['name'] = array(
		'#title' => 'Name',
		'#description' => 'Type name here.',
		'#type' => 'textfield',
		'#required' => TRUE,
	);
	$form['path'] = array(
		'#title' => 'Path',
		'#description' => 'Enter a full url of the any page.',
		'#type' => 'textfield',
		'#required' => TRUE,
	);
	$form['classname'] = array(
		'#title' => 'Class Name',
		'#description' => 'Enter class name as you want.',
		'#type' => 'textfield',
		'#required' => TRUE,
	);
	$form['submit'] = array(
	'#type' => 'submit',
	'#value' => t('Save'),
	);	
	return $form;
}

/**
 * Implements form_submission().
 */
function body_class_by_path_form_submit($form, &$form_state){
	if(!empty($form_state['values']['name']) && !empty($form_state['values']['path'])){
	$bcbp = db_insert('body_class_by_path')
	->fields(array(
	  'name' => $form_state['values']['name'],
	  'path' => $form_state['values']['path'],
	  'classname' => $form_state['values']['classname'],
	))
	->execute();
	drupal_set_message('Record has been inserted.');	
	drupal_goto("admin/config/pathlist");
	}
}

/**
 * Implements Data_listing_view().
 */
function body_class_by_path_form_data(){	
 	 $sql = "SELECT * FROM {body_class_by_path} ORDER BY id";
 	 $result = db_query($sql);
	/* with table */
	  $header = array('ID', 'Name', 'Path', 'Class Name', 'Edit', 'Delete');
	  $rows = array();
	  // Looping for filling the table rows
	  while($data = $result->fetchObject()){//print_r($data); exit;
	    // Fill the table rows
  	       $rows[] = array(
		      $data->id,
		      $data->name,
		      $data->path,
			  $data->classname,
			  l('Edit', 'admin/config/pathlist/'.$data->id.'/edit'),
			  l('Delete', 'admin/config/pathlist/'.$data->id.'/delete'),
		    );
	  }
	
	  // Output of table with the paging
	  $output .= theme_table(
		    array(
		      "header" => $header,
		      "rows" => $rows,
		      "attributes" => array(),
		      "sticky" => true, // Table header will be sticky
		      "caption" => "",
		      "colgroups" => array(),
		      "empty" => t("Table has no data!") // The message to be displayed if table is empty
		    )
	  );
     return $output;
}

/**
 * Implements form_edit_functionality().
 */
function body_class_by_path_form_edit($form, &$form_state){
	 $id = arg(3);
     $result = db_select('body_class_by_path', 'bcbp')
				->fields('bcbp')
				->condition('id', $id,'=')
				->execute()
				->fetchAssoc();
	 $form = array();
	 $form['id'] = array(
			'#title' => 'ID',
			'#description' => 'id',
			'#type' => 'hidden',
			'#default_value' => $result['id'],
	 );
	 $form['name'] = array(
			'#title' => 'Name',
			'#description' => 'Update the exiting name.',
			'#type' => 'textfield',
			'#default_value' => $result['name'],
	 );
	 $form['path'] = array(
		'#title' => 'Path',
		'#description' => 'Update exiting path',
		'#type' => 'textfield',
		'#default_value' => $result['path'],
	 );
	 $form['classname'] = array(
		'#title' => 'Class Name',
		'#description' => 'Update exiting class name.',
		'#type' => 'textfield',
		'#default_value' => $result['classname'],
	 );
	return confirm_form($form,t(''), isset($_GET['destination']) ? $_GET['destination'] : "admin/config/pathlist",	t(''),
			t('Edit'),
			t('Cancel'));
}

/**
 * Implements form_edit_submission().
 */
function body_class_by_path_form_edit_submit($form, &$form_state){
	 if ($form_state['values']['confirm']) {
			$id = $form_state['values']['id'];
			$name = $form_state['values']['name'];
			$path = $form_state['values']['path'];
			$classname = $form_state['values']['classname'];
	 $query = "UPDATE {body_class_by_path} SET name = '$name', path = '$path', classname = '$classname' WHERE id='$id'";
	 db_query($query);
	 }
	 drupal_goto("admin/config/pathlist");
}

/**
 * Implements form_delete_confirm().
 */
function body_class_by_path_form_delete($form, &$form_state){
    $arg = arg(3);	
	$form['id'] = array(
		'#type' => 'value',
		'#value' => $arg,
	); 
return confirm_form($form,t('Are you sure you want to delete this link?'),
    	isset($_GET['destination']) ? $_GET['destination'] : "admin/config/pathlist",t('This action cannot be undone.'),t('Delete'),t('Cancel'));
}

/**
 * Implements form_delete_submit().
 */
function body_class_by_path_form_delete_submit($form, &$form_state) {
 if ($form_state['values']['confirm']) {
		$id = $form_state['values']['id'];
        $query = "DELETE  FROM {body_class_by_path} where id=$id";
	    $rs = db_query($query);
 drupal_set_message(t('Content has been deleted successfully.'));}
 drupal_goto("admin/config/pathlist");
}

/**
 * Implements hook_preprocess_HOOK().
 */
function body_class_by_path_preprocess_html(&$vars) {
    global $base_url;
    $current_path = $base_url . '/' . current_path();
	$result = db_select('body_class_by_path', 'bcbp')
				->fields('bcbp')
				->execute()
				->fetchAll();
		foreach($result as $resultval){ 
			$pathval = $resultval->path;
			$bodyclass = $resultval->classname;
			if(trim($current_path) == ($pathval)){
			$vars['classes_array'][] = $bodyclass;
		}
	}
}

?>